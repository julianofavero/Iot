#include "DHTesp.h"
#include "WiFi.h"
#include "HTTPClient.h"
#include "PubSubClient.h"

DHTesp dhtSensor;
HTTPClient http;
WiFiClient espClient;
PubSubClient mqttClient (espClient);

//wi-fi
const char* ssid = "Wokwi-GUEST";
const char* password = "";

//declarando pinagem
const int relayPin1 = 2;
const int relayPin2 = 4;

//http
const String url = "https://api.thingspeak.com/update?api_key=OW924JAZN469MQ1J";

void setup() {
  Serial.begin(115200);
  Serial.println("iniciando setup");

  //Wi-fi
  WiFi.begin(ssid, password);
  while(WiFi.status() != WL_CONNECTED){
    delay(1000);
    Serial.println(WiFi.status());
    Serial.println("conectando wi-fi....");
  }
  Serial.println("Wi-Fi conectado!");

  //pinagem
  pinMode(relayPin1, OUTPUT);
  pinMode(relayPin2, OUTPUT);
  dhtSensor.setup(13, DHTesp::DHT22);

  //broker
  const char* server = "broker.hivemq.com";
  int porta = 1883;
  const char* cliente = "IDtesteSA3";
  const char* topico = "testeSA3";
  mqttClient.setServer(server, porta);
  mqttClient.connect(cliente);
  mqttClient.subscribe(topico);
  while(!mqttClient.connected()){
    delay(1000);
    Serial.println("conectando cliente ");
  }
  Serial.println("broker conectado!");
  Serial.println("finalizando setup");
}

void loop() {

  //LED azul
  digitalWrite(relayPin1, HIGH);
  delay(500);
  float temperatura = dhtSensor.getTemperature();
  Serial.println("temperatura:" + String(temperatura) + "Â°C");
  Serial.println("-----------------------");
  digitalWrite(relayPin1, LOW);

  //LED verde
  digitalWrite(relayPin2, HIGH);
  delay(500);
  float humidade = dhtSensor.getHumidity();
  Serial.println("humidade:" + String(humidade) + "%");
  Serial.println("-----------------------");
  digitalWrite(relayPin2, LOW);

  //http
  String path = url + "&field1=" + String(temperatura) + "&field2=" + String(humidade);
  http.begin(path);
  delay(500);

  //broker
  int msg = mqttClient.publish("julianofaveroSA3" ,"temperatura: humidade: ");
  if(!msg){
    Serial.println("Falha no envio, reconectando...");
    const char* server = "broker.hivemq.com";
    int porta = 1883;
    const char* cliente = "IDtesteSA3";
    const char* topico = "testeSA3";
    mqttClient.setServer(server, porta);
    mqttClient.connect(cliente);
    mqttClient.subscribe(topico);
    while(!mqttClient.connected()){
      delay(1000);
      Serial.println("conectando cliente ");
  }
  Serial.println("broker reconectado!");
}
  delay(2000);
}
