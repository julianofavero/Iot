// importação de bibliotecas
#include "DHTesp.h"
#include "WiFi.h"
#include "HTTPClient.h"
#include "PubSubClient.h"
#include "Arduino_JSON.h"

//declaração das bibliotecas
DHTesp dhtSensor;
HTTPClient http;
WiFiClient espClient;
PubSubClient mqttClient (espClient);
JSONVar data;

//wi-fi
const char* ssid = "Wokwi-GUEST";
const char* password = "";

//declarando pinagem
const int relayPin1 = 2;
const int relayPin2 = 4;

//http
const String url = "https://api.thingspeak.com/update?api_key=OW924JAZN469MQ1J";

void setup() {
  Serial.begin(115200);
  Serial.println("iniciando setup");

  //setup Wi-fi
  WiFi.begin(ssid, password);
  while(WiFi.status() != WL_CONNECTED){
    delay(1000);
    Serial.println(WiFi.status());
    Serial.println("conectando wi-fi....");
  }
  Serial.println("Wi-Fi conectado!");

  //setup pinagem
  pinMode(relayPin1, OUTPUT);
  pinMode(relayPin2, OUTPUT);
  dhtSensor.setup(13, DHTesp::DHT22);

  //setup broker
  const char* Server = "broker.hivemq.com";
  int Porta = 1883;
  const char* Client = "clientID-48ioioi&7778sdfasW23";
  const char* Topic = "senai";
  mqttClient.setServer(Server, Porta);
  mqttClient.connect(Client);
  mqttClient.subscribe(Topic);
  while(!mqttClient.connected()){
    delay(1000);
    Serial.println("conectando cliente ");
  }
  Serial.println("broker conectado!");
  Serial.println("finalizando setup");
}

void loop() {

  //LED azul + captura e conversão de dados
  digitalWrite(relayPin1, HIGH);
  delay(500);
  float temperatura = dhtSensor.getTemperature();
  data["temperatura"] = temperatura;
  Serial.println("temperatura:" + String(temperatura) + "°C");
  Serial.println("-----------------------");
  digitalWrite(relayPin1, LOW);

  //LED verde + captura e conversão de dados
  digitalWrite(relayPin2, HIGH);
  delay(500);
  float humidade = dhtSensor.getHumidity();
  data["umidade"] = humidade;
  Serial.println("humidade:" + String(humidade) + "%");
  Serial.println("-----------------------");
  digitalWrite(relayPin2, LOW);

  String jsonString = JSON.stringify(data);

  //http
  String path = url + "&field1=" + String(temperatura) + "&field2=" + String(humidade);
  http.begin(path);
  delay(500);

  //conexão broker
  boolean msg = mqttClient.publish("senai", jsonString.c_str());
  if(!msg){
    Serial.println("Falha no envio, reconectando...");
  const char* Server = "broker.hivemq.com";
  int Porta = 1883;
  const char* Client = "clientID-27ioioi&7778sdfasW23";
  const char* Topic = "senai";
  mqttClient.setServer(Server, Porta);
  mqttClient.connect(Client);
  mqttClient.subscribe(Topic);
  while(!mqttClient.connected()){
    delay(1000);
  }
  Serial.println("broker reconectado!");
}
  delay(2000);
}
